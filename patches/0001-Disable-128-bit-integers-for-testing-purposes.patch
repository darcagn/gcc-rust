From 252013d4d77dea9ce2078642d721d7ab906075ac Mon Sep 17 00:00:00 2001
From: Robert Zakrzewski <robert.zakrzewski1@stellantis.com>
Date: Fri, 19 Apr 2024 16:21:56 +0200
Subject: [PATCH] Disable 128 bit integers for testing purposes

---
 gcc/config/i386/i386-jit.cc | 2 +-
 gcc/jit/jit-playback.cc     | 8 ++++----
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/gcc/config/i386/i386-jit.cc b/gcc/config/i386/i386-jit.cc
index 8c7c8cd45e8..2dc35b6a746 100644
--- a/gcc/config/i386/i386-jit.cc
+++ b/gcc/config/i386/i386-jit.cc
@@ -69,7 +69,7 @@ ix86_jit_register_target_info (void)
   std::string cpu = arch.substr (arg_pos, end_pos - arg_pos);
   jit_target_set_arch (cpu);
 
-  jit_target_set_128bit_int_support (targetm.scalar_mode_supported_p (TImode));
+  //jit_target_set_128bit_int_support (targetm.scalar_mode_supported_p (TImode));
 
   if (float16_type_node != NULL && TYPE_PRECISION(float16_type_node) == 16)
     jit_target_add_supported_target_dependent_type(GCC_JIT_TYPE_FLOAT16);
diff --git a/gcc/jit/jit-playback.cc b/gcc/jit/jit-playback.cc
index 625af722741..a6ddfa179d0 100644
--- a/gcc/jit/jit-playback.cc
+++ b/gcc/jit/jit-playback.cc
@@ -249,8 +249,8 @@ get_tree_node_for_type (enum gcc_jit_types type_)
     case GCC_JIT_TYPE_UINT64_T:
       return uint64_type_node;
     case GCC_JIT_TYPE_UINT128_T:
-      if (targetm.scalar_mode_supported_p (TImode))
-	return uint128_type_node;
+      /*if (targetm.scalar_mode_supported_p (TImode))
+	return uint128_type_node;*/
 
       add_error (NULL, "gcc_jit_types value unsupported on this target: %i",
 		 type_);
@@ -265,8 +265,8 @@ get_tree_node_for_type (enum gcc_jit_types type_)
     case GCC_JIT_TYPE_INT64_T:
       return intDI_type_node;
     case GCC_JIT_TYPE_INT128_T:
-      if (targetm.scalar_mode_supported_p (TImode))
-	return intTI_type_node;
+      /*if (targetm.scalar_mode_supported_p (TImode))
+	return intTI_type_node;*/
 
       add_error (NULL, "gcc_jit_types value unsupported on this target: %i",
 		 type_);
-- 
2.25.1

